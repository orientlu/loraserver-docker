
## general setting
[general]
# trace=6, debug=5, info=4, warning=3, error=2, fatal=1, panic=0
log_level=6

# ture/false, show detailed log for debug
log_report=false


## redis setting
# Please note that Redis 2.6.0+ is required.
[redis]
# Redis url (e.g. redis://user:password@hostname/0)
#	 redis://:password@hostname:port/db_number
# For more information about the Redis URL format, see:
# https://www.iana.org/assignments/uri-schemes/prov/redi
url ="redis://redis:6379"

# Max idle connections in the pool. dial frequency
max_idle=10

# Max active connections in the pool.
max_active=100

# Close connections after remaining idle for this duration. If the value
# is zero, then idle connections are not closed. You should set
# the timeout to a value less than the server's timeout.
idle_timeout="5m0s"

## Mqtt setting
[mqtt]
# Server list of mqtt broker
# (e.g. ["scheme://host:port", "..."] where scheme is tcp, ssl or ws
servers=[
    "tcp://mosquitto:1883",
]

# Connect with the given password (optional)
password=""

# 0: at most once
# 1: at least once
# 2: exactly once
# Note: an increase of this value will decrease the performance.
# For more information: https://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels
qos=0

# Set the "clean session" flag in the connect message when this client
# connects to an MQTT broker. By setting this flag you are indicating
# that no messages saved by the broker for this client should be delivered.
clean_session=true

# Set the client id to be used by this client when connecting to the MQTT
# broker. A client id must be no longer than 23 characters. When left blank,
# a random id will be generated. This requires clean_session=true.
client_id="coordinator-"

#CA certificate file (optional)
# Use this when setting up a secure connection (when server uses ssl://...)
# but the certificate used by the server is not trusted by any CA certificate
# on the server (e.g. when self generated).
ca_cert=""

# TLS certificate file (optional)
tls_cert=""

# TLS key file (optional)
tls_key=""


## Backend setting
[backend]
 ### Gateway setting
 [backend.gateway]
 # default gateway/notify/+
 notify_topic_template="gateway/notify/+"

 # start how many croutine to rev chan and set to redis
 notify_topic_storage_coroutine_number=2

 # sub topic of NotifyTopicTemplate mac : gateway/notify/mac
 # mqttUrl <-> gatewayId, so we can know gateway connect which mqtt broker now
 notify_topic_mac_event="mac"

 # set key_name prefix in redis, (e.g. thePrefix/[gatewayID]:MqttUrl/updatetime)
 notify_topic_mac_event_redis_prefix="mac_event"

 # set the map mqttUrl <-> gatewayID expire time(second) in redis
 notify_topic_mac_event_redis_expires=30

